// AUTO-GENERATED by protoc-gen-webviewrpc
// (C) "Server" side: Base class + static binder

import { decodeHelloRequest, encodeHelloResponse } from './hello_world.js'; // 메시지 import (선택)


/**
 * 추상 클래스 (C#의 HelloServiceBase)
 * 사용자(서버구현자)는 이 클래스를 상속해서 실제 로직을 override한다.
 */
export class HelloServiceBase {
  
  SayHello(requestObj) {
    // requestObj = JS object (이미 decode된)
    throw new Error("SayHello not implemented");
  }
  
}

/**
 * static BindService, (C#의 HelloService.BindService(impl))
 * - impl: HelloServiceBase 구현체
 * - return: ServiceDefinition(methodHandlers)
 */
export class HelloService {
  static bindService(impl) {
    const def = {
      methodHandlers: {}
    };

    
    def.methodHandlers["HelloService.SayHello"] = (reqBytes) => {
      // 1) decode reqBytes => requestObj
      //    (예: const req = HelloRequest.decode(reqBytes))
      const reqObj = decodeHelloRequest(reqBytes); // 가정
      // 2) call impl.SayHello(reqObj)
      const resObj = impl.SayHello(reqObj);
      // 3) encode resObj => Uint8Array
      const resBytes = encodeHelloResponse(resObj); // 가정
      return resBytes;
    };
    

    return def;
  }
}
